class CMPElement{constructor(e){this.className=CMPElement.classListToStr(e.classList),this.element=e,this.pathHTML="",this.path="",this.spanPath=null,this.getPath(),this.element.addEventListener("click",()=>{this.toggleSpanPath()})}static classListToStr(e){return e?[...e].join("."):""}getClass(){return this.className}getElement(){return this.element}getPath(){let e=`${this.className}<span id="cmp-path-index" > [${$(this.element).index()}]</span> `;this.path=`${this.className}[${$(this.element).index()}]`;let t=$(this.element).parent();for(;"BODY"!==t[0].nodeName&&"HTML"!==t[0].nodeName&&"#document"!==t[0].nodeName;){let s=CMPElement.classListToStr(t[0].classList),n=t.index();e=`${s}\n                  <span id="cmp-path-index" > [${n}] </span> \n                  <span id="cmp-path-arrow" >&#129130;</span> ${e}`,this.path=`${s}[${n}] --\x3e ${this.path}`,t=t.parent()}this.pathHTML=`body <span id="cmp-path-arrow" >&#129130;</span> ${e}`,this.path=`body --\x3e ${this.path}`}createSpanPath(){let e=this.element.getBoundingClientRect(),t=document.createElement("span");t.style.left=e.x+"px",t.style.top=e.y+"px",t.classList.add("cmp-element-path"),t.innerHTML=this.pathHTML,this.spanPath=t,document.body.appendChild(this.spanPath)}toggleSpanPath(){this.spanPath&&this.spanPath.classList.toggle("cmp-element-path-active")}removeSpanPath(){this.spanPath&&this.spanPath.classList.remove("cmp-element-path-active")}static equals(e,t){return e===t||!(!e instanceof CMPElement)&&e.className===t.className}equalsStyle(e){var t,s,n=window.getComputedStyle(this.element),i=window.getComputedStyle(e.element),l=n.length;for(t=0;t<l;t++)if(n[s=n[t]]!=i[s])return!1;return!0}}class CMPSet{constructor(){this.setElements=[],this.length=0}get(e){return this.setElements[e]}getArray(){return this.setElements}add(e,t=((e,t)=>e===t)){return this.includes(e,t)?-1:(this.setElements.push(e),this.length+=1,this.setElements.length-1)}includes(e,t=((e,t)=>e===t)){return this.setElements.find(s=>t(s,e))}}class CMP{constructor(e="div"){this.elementsTag=[];for(const t of document.getElementsByTagName(e))this.elementsTag.push(new CMPElement(t));this.elementCmp={}}cmp(){let e,t=[...this.elementsTag];for(let s=0;s<t.length;s++)if(e=t[s].getClass(),!Object.getOwnPropertyNames(this.elementCmp).includes(e)){this.elementCmp[e]=new CMPSet;for(let n=s;n<t.length;n++)t[s].equalsStyle(t[n])&&(this.elementCmp[e].add(t[n],CMPElement.equals),s!==n&&t.splice(n,1))}}filter(e){let t={};for(const s of Object.getOwnPropertyNames(this.elementCmp))e(this.elementCmp[s])&&(t[s]=this.elementCmp[s]);return t}}class UICMP extends HTMLElement{constructor(e="div"){super(),this.currentElement=null,this.click=!0,this.close=document.createElement("span"),this.close.className="cmp-exit",this.close.setAttribute("data-before","×"),this.appendChild(this.close),this.addEventListener("click",this.handlerClick.bind(this)),this.wrapper=document.createElement("div"),this.wrapper.className="cmp-wrapperItems",this.appendChild(this.wrapper),this.form=document.createElement("form"),this.form.className="cmp-form",this.form.addEventListener("submit",e=>{e.preventDefault(),this.button.focus(),this.reset(),this.run(this.input.value)}),this.appendChild(this.form),this.input=document.createElement("input"),this.input.className="cmp-input",this.input.placeholder="Tag name here.. (ex: div)",this.form.appendChild(this.input),this.button=document.createElement("button"),this.button.className="cmp-button",this.button.type="submit",this.button.innerHTML="search",this.form.appendChild(this.button),this.mask=document.createElement("div"),this.mask.className="cmp-mask",document.body.appendChild(this.mask),this.spanOnOff=document.createElement("span"),this.spanOnOff.className="cmp-spanOnOff",this.spanOnOff.classList.toggle("cmp-spanOnOff-on"),this.spanOnOff.innerHTML="mask On",this.clickOnOff=!0,this.spanOnOff.addEventListener("click",e=>{this.spanOnOff.classList.toggle("cmp-spanOnOff-on"),this.mask.classList.toggle("cmp-mask-off"),this.clickOnOff?this.spanOnOff.innerHTML="mask Off":this.spanOnOff.innerHTML="mask On",this.clickOnOff=!this.clickOnOff}),this.appendChild(this.spanOnOff),this.run(e)}reset(){this.wrapper.innerHTML=""}add(e){this.wrapper.appendChild(e)}run(e="div"){let t=new CMP(e);t.cmp();let s=t.filter(e=>e.length>1);console.log(s);for(const e of Object.getOwnPropertyNames(s))this.add(new UICMPElement(e,s[e]))}handlerClick(e){"CMP-ELEMENT"===e.target.parentElement.nodeName&&(this.currentElement?(this.currentElement.handlerClick(),this.currentElement.handlerClickRemove(),this.currentElement=e.target.parentElement):this.currentElement=e.target.parentElement),e.target===this.close&&(this.classList.toggle("cmp-main-close"),this.close.classList.toggle("cmp-open"),this.click?this.close.setAttribute("data-before","☙"):this.close.setAttribute("data-before","×"),this.click=!this.click)}}class UICMPElement extends HTMLElement{constructor(e="Hello",t=[]){super(),this.elements=t,this.a=document.createElement("a");let s="#";t.length>0&&(t.getArray()[0].getElement().setAttribute("id",e),s+=e),this.a.setAttribute("href",s),this.a.classList.add("cmp-linkItem"),this.a.innerHTML=`${e} <span class="cmp-count">${this.elements.length}</span>`,this.appendChild(this.a),this.addEventListener("click",this.handlerClick.bind(this)),this.elements.getArray().forEach(e=>{setTimeout(()=>{e.createSpanPath()},500)})}handlerClick(){console.log(this.elements),this.elements.getArray().forEach(e=>{this.visible(e);let t=e.getElement().getBoundingClientRect();0===t.height&&e.getElement().classList.toggle("cmp-element-stretch-height"),0===t.width&&e.getElement().classList.toggle("cmp-element-stretch-width"),e.getElement().classList.toggle("cmp-element-active")})}handlerClickRemove(){this.elements.getArray().forEach(e=>{e.removeSpanPath()})}visible(e){let t=e.getElement().parentElement;for(;"BODY"!==t.nodeName;)"none"===t.style.display&&(console.log("ok"),t.style.display=""),"hidden"===t.style.visibility&&(t.style.visibility="visible"),"0"===t.style.opacity&&(t.style.opacity="1"),t=t.parentElement}}customElements.define("cmp-element",UICMPElement),customElements.define("cmp-main",UICMP),setTimeout(()=>{setTimeout(()=>{window.scrollTo(0,0)},500);let e=new UICMP("div");document.body.appendChild(e)},3);